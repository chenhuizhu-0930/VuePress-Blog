(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{365:function(s,t,e){"use strict";e.r(t);var a=e(14),i=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"git-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[s._v("#")]),s._v(" Git Push")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git push <远程> <源分支>:<目标分支>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果只写一个名字（如 "),t("code",[s._v("git push origin main")]),s._v("），Git 会把它同时当作 本地源分支 和 远端目标分支。")]),s._v(" "),t("p",[s._v("Git会先在本地找 "),t("em",[s._v("src")]),s._v("＝"),t("code",[s._v("main")]),s._v(" 的分支；如果是老版git本地分支默认master，Git找不到就直接报错 error: src refspec main does not match any。")]),s._v(" "),t("p",[s._v("**解决方法：**可以在bash中执行"),t("code",[s._v("git branch -m main")]),s._v("，把本地分支从master改为main")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git push -u origin main\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("code",[s._v("-u")]),s._v(" 是 "),t("code",[s._v("git push")]),s._v(" 命令中的一个选项，是 "),t("code",[s._v("--set-upstream")]),s._v(" 的缩写，意思是：")]),s._v(" "),t("blockquote",[t("p",[s._v("👇 当你第一次把本地分支推送到远端分支时，顺便把它们之间建立"),t("strong",[s._v("跟踪关系")]),s._v("。")])]),s._v(" "),t("p",[s._v("有了-u之后可以直接"),t("code",[s._v("git push")]),s._v("，自动推送当前分支到它跟踪的远端分支（如 "),t("code",[s._v("origin/main")]),s._v("）")])])}),[],!1,null,null,null);t.default=i.exports}}]);